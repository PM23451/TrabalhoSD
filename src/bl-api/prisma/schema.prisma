// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Teacher {
  name       String   @id
  city       String
  createdOn  DateTime @default(now()) @map("created_on")
  updatedOn  DateTime @updatedAt @map("updated_on")

  @@map("teachers")
}

/*SELECT
    ":id", -- Socrata column ID
    "driver_sex", -- Gender of driver
    "travel_direction", -- Direction vehicle was traveling
    "public_property_damage", -- Public property damaged (Yes or No)
    "contributing_factor_1", -- Factors contributing to the collision for designated vehicle
    "contributing_factor_2", -- Factors contributing to the collision for designated vehicle
    "vehicle_damage_3", -- Additional damage locations on the vehicle
    "vehicle_type", -- Type of vehicle based on the selected vehicle category (ATV, bicycle, car/suv, ebike, escooter, truck/bus, motorcycle, other)
    "state_registration", -- State where vehicle is registered.
    "vehicle_year", -- Year the vehicle was manufactured
    "vehicle_model", -- Vehicle model
    "driver_license_status", -- License, permit, unlicensed
    "vehicle_make", -- Vehicle make
    "collision_id", -- Crash identification code. Foreign Key, matches unique_id from the Crash table. 
    "crash_date", -- Occurrence date of collision
    "vehicle_id", -- Vehicle identification code assigned by system
    "vehicle_damage_1", -- Additional damage locations on the vehicle
    "vehicle_damage", -- Location on the vehicle where most of the damage occurred
    "point_of_impact", -- Location on the vehicle of the initial point of impact (i.e. driver side, passenger side rear, etc.)
    "pre_crash", -- Pre-crash action: Going straight, making right turn, passing, backing, etc.
    "crash_time", -- Occurrence time of collision
    "unique_id", -- Unique record code generated by system. Primary Key.
    "public_property_damage_type", -- Type of public property damaged (ex. Sign, fence, light post, etc.)
    "driver_license_jurisdiction", -- State where driver license was issued.
    "vehicle_damage_2", -- Additional damage locations on the vehicle
    "vehicle_occupants" -- Number of vehicle occupants*/

model Crash {
  collisionId                   Int    00   @id @map("collision_id") // Unique record code generated by the system, primary key for the Crash table
  socrataColumnId               String    @map(":id") // Socrata column ID
  numberOfCyclistKilled         Int       // Number of cyclists killed
  locationState                 String    // Location state
  location                      String    // Latitude, Longitude pair
  vehicleTypeCode1              String    // Type of vehicle based on the selected vehicle category (ATV, bicycle, car/suv, ebike, escooter, truck/bus, motorcycle, other)
  vehicleTypeCode2              String    // Type of vehicle based on the selected vehicle category (ATV, bicycle, car/suv, ebike, escooter, truck/bus, motorcycle, other)
  vehicleTypeCode3              String    // Type of vehicle based on the selected vehicle category (ATV, bicycle, car/suv, ebike, escooter, truck/bus, motorcycle, other)
  vehicleTypeCode4              String    // Type of vehicle based on the selected vehicle category (ATV, bicycle, car/suv, ebike, escooter, truck/bus, motorcycle, other)
  vehicleTypeCode5              String    // Type of vehicle based on the selected vehicle category (ATV, bicycle, car/suv, ebike, escooter, truck/bus, motorcycle, other)
  contributingFactorVehicle1    String    @map("contributing_factor_vehicle_1") // Factors contributing to the collision for designated vehicle
  contributingFactorVehicle2    String    @map("contributing_factor_vehicle_2") // Factors contributing to the collision for designated vehicle
  contributingFactorVehicle3    String    @map("contributing_factor_vehicle_3") // Factors contributing to the collision for designated vehicle
  contributingFactorVehicle4    String    @map("contributing_factor_vehicle_4") // Factors contributing to the collision for designated vehicle
  contributingFactorVehicle5    String    @map("contributing_factor_vehicle_5") // Factors contributing to the collision for designated vehicle
  latitude                      Float     // Latitude coordinate for Global Coordinate System, WGS 1984, decimal degrees (EPSG 4326)
  longitude                     Float     // Longitude coordinate for Global Coordinate System, WGS 1984, decimal degrees (EPSG 4326)
  locationAddress               String    // Location address
  borough                       String    // Borough where collision occurred
  zipCode                       String    // Postal code of incident occurrence
  crashDate                     DateTime  // Occurrence date of collision
  crashTime                     String    // Occurrence time of collision
  onStreetName                  String    // Street on which the collision occurred
  crossStreetName               String    // Street address if known
  offStreetName                 String    // Nearest cross street to the collision
  locationCity                  String    // Location city
  locationZip                   String    // Location ZIP
  numberofPersonsInjured        Int       @map("number_of_persons_injured") // Number of persons injured
  numberofPersonsKilled         Int       @map("number_of_persons_killed") // Number of persons killed
  numberofPedestriansInjured    Int       @map("number_of_pedestrians_injured") // Number of pedestrians injured
  numberofPedestriansKilled     Int       @map("number_of_pedestrians_killed") // Number of pedestrians killed
  numberofMotoristInjured       Int       @map("number_of_motorist_injured") // Number of vehicle occupants injured
  numberofMotoristKilled        Int       @map("number_of_motorist_killed") // Number of vehicle occupants killed
  numberofCyclistInjured        Int       @map("number_of_cyclist_injured") // Number of cyclists injured
  numberofCyclistKilled         Int       @map("number_of_cyclist_killed") // Number of cyclists killed
  createdOn                     DateTime  @default(now()) @map("created_on") // Creation timestamp
  updatedOn                     DateTime  @updatedAt @map("updated_on") // Update timestamp

  @@map("crashes") // Mapeia o modelo para a tabela "crashes" no banco de dados
}

